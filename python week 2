import pygame
import random
import time

snake_speed = 15

window_x = 720
window_y = 480

# pygame setup
pygame.init()
screen = pygame.display.set_mode((720, 480))
fps = pygame.time.Clock()
running = True

snake_position = [100,50]

snake_body = [[100, 50],
              [90,50],
              [80,50],
              [70,50]
              ]

fruit_position = [
    random.randrange(1, (window_x // 10)) * 10,
    random.randrange(1, (window_y // 10)) * 10
]
fruit_spawn = True

direction  ="RIGHT"

change_to = direction
              
score = 0
def show_score(choice, color, font, size):
    score_font = pygame.font.SysFont(font, size)

    score_surface = score_font.render("score : " + str(score), True, color)
    score_rect = score_surface.get_rect()
    screen.blit(score_surface, score_rect)
 
def game_over():
    my_font = pygame.font.SysFont("times new roman", 50)

    game_over_surface = my_font.render ("your score is: " + str(score), True, (255,0,0))
    game_over_rect = game_over_surface.get_rect()
    game_over_rect.midtop = (360,120)
    screen.blit(game_over_surface, game_over_rect)
    pygame.display.flip()
    time.sleep(2)
    pygame.quit()
    quit()





while True:
    # poll for events
    # pygame.QUIT event means the user clicked X to close your window
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP and direction != "DOWN":
                change_to = "UP"
            if event.key == pygame.K_DOWN and direction != "UP":
                change_to = "DOWN"
            if event.key == pygame.K_LEFT and direction != "RIGHT":
                change_to = "LEFT"
            if event.key == pygame.K_RIGHT and direction != "LEFT":
                change_to = "RIGHT"


                

    
    if change_to == "UP" and direction != "DOWN":
        direction = "UP"
    if change_to == "DOWN" and direction != "UP":
        direction = "DOWN"
    if change_to == "LEFT" and direction != "RIGHT":
        direction = "LEFT"
    if change_to == "RIGHT" and direction != "LEFT":
        direction = "RIGHT"

    
    if direction == "UP":
        snake_position[1] -= 10
    if direction == "DOWN":
        snake_position[1] += 10
    if direction == "LEFT":
        snake_position[0] -= 10
    if direction == "RIGHT":
        snake_position[0] += 10

    snake_body.insert(0, list(snake_position))
    if snake_position[0] == fruit_position[0] and snake_position[1] == fruit_position[1]:
        score += 10
        fruit_position = [
    random.randrange(1, (window_x // 10)) * 10,
    random.randrange(1, (window_y // 10)) * 10
]
        

    else:
        snake_body.pop()


    if not fruit_spawn:
        fruit_position = [random.randrange(10, 710),
                          random.randrange(10, 470)]
        
    fruit_spawn = True
    screen.fill((0,0,0))

    # fill the screen with a color to wipe away anything from last frame

    color = (10, 7, 25)

    screen.fill(color)

    for position in snake_body:
        pygame.draw.rect(screen, (48,138,72), pygame.Rect(position[0], position[1], 10,10) )

    pygame.draw.rect(screen, (255,0,0), pygame.Rect(fruit_position[0], fruit_position[1], 10, 10))

    if snake_position[0] < 0 or snake_position[0] >= window_x:
        game_over()
    if snake_position[1] < 0 or snake_position[1] >= window_y:
        game_over()
 



    for block in snake_body[1:]:
        if snake_position[0] == block [0] and snake_position[1] == block[1]:
            game_over()

        show_score(1, (255, 255, 255), "times new roman", 20)



    # flip() the display to put your work on screen
    pygame.display.update()
    fps.tick(15)